<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util=" http://www.springframework.org/schema/util"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:hdp="http://www.springframework.org/schema/hadoop"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
          http://www.springframework.org/schema/data/mongo
          http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd">
	
	<!-- 启用注解 -->
	<context:annotation-config />
     
    <!-- ================================================================================== -->
    <!-- 定义mongo对象，对应的是mongodb官方jar包中的Mongo，replica-set设置集群副本的ip地址和端口 -->
 	<!--<mongo:mongo id="mongo" replica-set="192.168.0.172:27016">-->
 	<mongo:mongo id="mongo" replica-set="192.168.1.161:27017">
		<!-- 一些连接属性的设置 -->	
		<mongo:options
 			 connections-per-host="5"
		     threads-allowed-to-block-for-connection-multiplier="5000"
		     connect-timeout="5000"
		     max-wait-time="10000"
		     auto-connect-retry="true"
		     socket-keep-alive="true"
		     socket-timeout="50000"
		     slave-ok="true"
		     write-number="1"
		     write-timeout="0"
		     write-fsync="false"/>
	</mongo:mongo>

	<!-- mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 -->
	<mongo:db-factory id="mongoDbFactory" dbname="novelbio" mongo-ref="mongo"/>

	<!-- mongodb的主要操作对象，所有对mongodb的增删改查的操作都是通过它完成 -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
	  <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
	</bean>
	<!-- ================================================================================== -->
	<!-- mongodbDataSource2 add by fans.fan-->
	 <!-- 定义mongo对象，对应的是mongodb官方jar包中的Mongo，replica-set设置集群副本的ip地址和端口 -->
 	<!--<mongo:mongo id="mongoKegg" replica-set="192.168.0.172:27016">-->
 	<mongo:mongo id="mongoKegg" replica-set="192.168.1.161:27017">
		<!-- 一些连接属性的设置 -->	
		<mongo:options
 			 connections-per-host="5"
		     threads-allowed-to-block-for-connection-multiplier="5000"
		     connect-timeout="5000"
		     max-wait-time="10000"
		     auto-connect-retry="true"
		     socket-keep-alive="true"
		     socket-timeout="10000"
		     slave-ok="true"
		     write-number="1"
		     write-timeout="0"
		     write-fsync="false"/>
	</mongo:mongo>

	<!-- mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 -->
	<mongo:db-factory id="mongoDbFactoryKegg" dbname="novelbio" mongo-ref="mongoKegg"/>

	<!-- mongodb的主要操作对象，所有对mongodb的增删改查的操作都是通过它完成 -->
	<bean id="mongoTemplateKegg" class="org.springframework.data.mongodb.core.MongoTemplate">
	  <constructor-arg name="mongoDbFactory" ref="mongoDbFactoryKegg"/>
	</bean>
	<!-- ================================================================================== -->
	
	<!-- 映射转换器，扫描back-package目录下的文件，根据注释，把它们作为mongodb的一个collection的映射 -->
	<mongo:mapping-converter base-package="com.novelbio.database.model" />
	
	<!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->
	<mongo:repositories base-package="com.novelbio.database.mongorepo"/>
	

	
	<!-- mongodbDataSource2 end by fans.fan-->

    <!-- spring AOP 
	<aop:aspectj-autoproxy proxy-target-class="true" /> -->
	
    <!-- 自动探测 enable component scanning (beware that this does not enable mapper scanning!)     --> 
    <context:component-scan base-package="com.novelbio.nbcgui.controltest" />
    <context:component-scan base-package="com.novelbio.nbcgui.controlseq" />
    <context:component-scan base-package="com.novelbio.analysis.diffexpress" />
    <context:component-scan base-package="com.novelbio.analysis.seq.mapping" />
    <context:component-scan base-package="com.novelbio.database.mongorepo.kegg" />
    
   	 <bean id="freemarkNBC" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">  
        <property name="templateLoaderPath" value="classpath:FreemarkerTmplt" />  
         <property name="freemarkerSettings">  
            <props>
                <prop key="defaultEncoding">UTF-8</prop>         
            </props>
        </property>  
    </bean>
    
    <!-- ==========================  其他配置  ================================================================================================== -->
    <bean id="managespecies" class="com.novelbio.database.service.servgeneanno.ManageSpeciesDB" lazy-init="true">
    </bean>
    
    <!-- 单机无数据库模式
    <bean id="managespecies" class="com.novelbio.database.service.servgeneanno.ManageSpeciesTxt" lazy-init="true">
    </bean>
     -->

 
</beans>